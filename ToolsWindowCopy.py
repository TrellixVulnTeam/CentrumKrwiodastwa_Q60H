# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ToolsWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication
import mysql.connector
from Baza import Baza


class Ui_TechWindow(object):
    def __init__(self, base):
        self.dtbase = base

    def setupUi(self, TechWindow):
        TechWindow.setObjectName("TechWindow")
        TechWindow.resize(490, 432)
        self.centralwidget = QtWidgets.QWidget(TechWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.wybor_Akcji = QtWidgets.QListWidget(self.centralwidget)
        self.wybor_Akcji.setGeometry(QtCore.QRect(20, 70, 121, 61))
        self.wybor_Akcji.setObjectName("wybor_Akcji")
        item = QtWidgets.QListWidgetItem()
        self.wybor_Akcji.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.wybor_Akcji.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.wybor_Akcji.addItem(item)
        self.label_Akcja = QtWidgets.QLabel(self.centralwidget)
        self.label_Akcja.setGeometry(QtCore.QRect(30, 40, 71, 21))
        self.label_Akcja.setObjectName("label_Akcja")
        self.label_Relacja = QtWidgets.QLabel(self.centralwidget)
        self.label_Relacja.setGeometry(QtCore.QRect(180, 40, 51, 21))
        self.label_Relacja.setObjectName("label_Relacja")
        self.label_Dane = QtWidgets.QLabel(self.centralwidget)
        self.label_Dane.setGeometry(QtCore.QRect(30, 170, 47, 13))
        self.label_Dane.setObjectName("label_Dane")
        self.Guzik_Zatwierdzajacy = QtWidgets.QPushButton(self.centralwidget)
        self.Guzik_Zatwierdzajacy.setGeometry(QtCore.QRect(320, 350, 75, 23))
        self.Guzik_Zatwierdzajacy.setObjectName("Guzik_Zatwierdzajacy")
        self.wybor_Relacji = QtWidgets.QListWidget(self.centralwidget)
        self.wybor_Relacji.setGeometry(QtCore.QRect(160, 70, 121, 61))
        self.wybor_Relacji.setObjectName("wybor_Relacji")
        item = QtWidgets.QListWidgetItem()
        self.wybor_Relacji.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.wybor_Relacji.addItem(item)
        self.Tablica_Danych = QtWidgets.QTableWidget(self.centralwidget)
        self.Tablica_Danych.setGeometry(QtCore.QRect(10, 190, 291, 192))
        self.Tablica_Danych.setObjectName("Tablica_Danych")
        self.Tablica_Danych.setColumnCount(1)
        self.Tablica_Danych.setRowCount(4)
        item = QtWidgets.QTableWidgetItem()
        self.Tablica_Danych.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Tablica_Danych.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Tablica_Danych.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Tablica_Danych.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Tablica_Danych.setHorizontalHeaderItem(0, item)
        TechWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TechWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 490, 21))
        self.menubar.setObjectName("menubar")
        TechWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TechWindow)
        self.statusbar.setObjectName("statusbar")
        TechWindow.setStatusBar(self.statusbar)

        self.retranslateUi(TechWindow)
        QtCore.QMetaObject.connectSlotsByName(TechWindow)

    def retranslateUi(self, TechWindow):
        _translate = QtCore.QCoreApplication.translate
        TechWindow.setWindowTitle(_translate("TechWindow", "MainWindow"))
        __sortingEnabled = self.wybor_Akcji.isSortingEnabled()
        self.wybor_Akcji.setSortingEnabled(False)
        item = self.wybor_Akcji.item(0)
        item.setText(_translate("TechWindow", "Dodaj dane"))
        item = self.wybor_Akcji.item(1)
        item.setText(_translate("TechWindow", "Usuń dane"))
        item = self.wybor_Akcji.item(2)
        item.setText(_translate("TechWindow", "Modyfikuj dane"))
        self.wybor_Akcji.setSortingEnabled(__sortingEnabled)
        self.label_Akcja.setText(_translate("TechWindow", "Acja:"))
        self.label_Relacja.setText(_translate("TechWindow", "Relacja:"))
        self.label_Dane.setText(_translate("TechWindow", "Dane:"))
        self.Guzik_Zatwierdzajacy.setText(_translate("TechWindow", "Zatwierdź"))
        __sortingEnabled = self.wybor_Relacji.isSortingEnabled()
        self.wybor_Relacji.setSortingEnabled(False)
        item = self.wybor_Relacji.item(0)
        item.setText(_translate("TechWindow", "Placowki"))
        item = self.wybor_Relacji.item(1)
        item.setText(_translate("TechWindow", "Laboratoria"))
        self.wybor_Relacji.setSortingEnabled(__sortingEnabled)
        item = self.Tablica_Danych.verticalHeaderItem(0)
        item.setText(_translate("TechWindow", "imie"))
        item = self.Tablica_Danych.verticalHeaderItem(1)
        item.setText(_translate("TechWindow", "nazwisko"))
        item = self.Tablica_Danych.verticalHeaderItem(2)
        item.setText(_translate("TechWindow", "wzrost"))
        item = self.Tablica_Danych.horizontalHeaderItem(0)
        item.setText(_translate("TechWindow", "Dane"))

        self.Guzik_Zatwierdzajacy.clicked.connect(self.getChoice)

    #zmiana fomry tabeli w zależności od wybranych opcji
    def updateDane(self,table = 'placowki'):
        columns = Baza.getColumnNamesFromTable(self.dtbase,table)
        numC = len(columns)

        _translate = QtCore.QCoreApplication.translate


        self.Tablica_Danych.setColumnCount(1)
        self.Tablica_Danych.setRowCount(numC)
        for i in range(numC):
            # self.Tablica_Danych.setItem(0, i, QtWidgets.QTableWidgetItem(columns[i]))
            item = self.Tablica_Danych.verticalHeaderItem(i)
            item.setText(_translate("TechWindow", columns[i]))


    #wybór dostępnych opcji
    def getChoice(self):
        try:
            item1 = self.wybor_Akcji.currentItem()
            item1 = item1.text()
            item2 = self.wybor_Relacji.currentItem()
            item2 = item2.text()
            item3 = self.Tablica_Danych.item(0, 0)
            item3 = item3.text()
            item4 = self.Tablica_Danych.item(1, 0)
            item4 = item4.text()
            print(item1, item2, item3, item4)
            if item1 == "Dodaj dane" and item2 == "Placowki":
                Baza.insertPlacowki(self.dtbase, int(item3), item4)
            elif item1 == "Usuń dane" and item2 == "Placowki":
                Baza.deletePlacowki(self.dtbase, int(item3), item4)
        except:
            print('cuśik poszedu nie tak')
        # return item1, item2, item3
        # item3 = self.Tablica_Danych.item(0, 0)
        #a = item3.text()
        #print(a + 'xxd')
        print(self.Tablica_Danych.item(0, 0) == None)
        self.updateDane()
        #print(a == '')